#include atoms
#include ./mech.spc
#include ./mech.eqn

//#LANGUAGE Fortran90
//#INTEGRATOR kpp_lsode
//#DRIVER general

#LOOKATALL

///#MONITOR O3; NO; NO2; HO2;

#INLINE MATLAB_RATES
%//////////////////////////  RACM_THERMAL ///////////////////////////
function [rate_constant] =  RACM_THERMAL(temperature,A0,B0)
%////   RACM2 reaction rates have the form K = A * exp(-B / T)
%// for example - for the reaction: HO+O3 -> O2 + O2 
%// rate_constant = 1.70 x 10-12 exp(-940/T)
%// A0 = 1.70 x 10-12
%// B0 = 940
   rate_constant =  (A0) * exp(-(B0)/temperature);
return

%//////////////////////////  RACM_THERMAL_T2 ///////////////////////////
function [rate_constant] =  RACM_THERMAL_T2(temperature,A0,B0)
%///    NEEDS TO BE UPDATED
%////   RACM2 reaction rates have the form K = A * exp(-B / T)
%// for example - for the reaction: HO+O3 -> O2 + O2 
%// rate_constant = 1.70 x 10-12 exp(-940/T)
%// A0 = 1.70 x 10-12
%// B0 = 940
   rate_constant =  temperature^2. * (A0) * exp(-(B0)/temperature);
return

%//////////////////////////  RACM_TROE ///////////////////////////
function [rate_constant] =  RACM_TROE(temperature,M_conc,K0,N,KINF,M)
%//Following the definition in the NASA JPL data eval 2011, section 2.1
%//The rate constant is given by  k_f([M],T)
%//k_0_T = K0 * (T/300.)^(-N)
%//k_inf_T = KINF * (T/300.)^(-M)
%//FACTOR = [1+(log10(k_0_T AIR_CONC/k_inf_T))^2]^-1
%//rate_constant = (k_0_T AIR_CONC )/ (1 + (k_0_T AIR_CONC/k_inf_T) ) * 0.6^(FACTOR)
  k_0_T   = K0 * (temperature/300.)^(-N);
  k_inf_T = KINF * (temperature/300.)^(-M);
%//M_conc = get_M_CONC();
  FACTOR = ( 1  +  (  log10(  k_0_T*M_conc/k_inf_T   )  )^2. )^(-1.);
  rate_constant = (k_0_T*M_conc)/(1+(k_0_T*M_conc/k_inf_T)) * 0.6^(FACTOR); 
return

%//////////////////////////  RACM_TROE_EQUIL ///////////////////////////
function [rate_constant] =  RACM_TROE_EQUIL(temperature,M_conc,K0,N,KINF,M,A0,B0)
%//Following the definition in the NASA JPL data eval 2011
  K_TROE = RACM_TROE(temperature,M_conc,K0,N,KINF,M); 
  Keq = A0*exp(B0/temperature) ;
  rate_constant = K_TROE/Keq; 
return

%//////////////////////////  RACM_reaction51 ///////////////////////////
function [rate_constant] =  RACM_reaction51(temperature)
%//table 2f from Goloffi electronic supplement - for reaction 51, pressure in Pascals
%//units of pressure - PRES_TIME_LEV is Pa
  global PRES_TIME_LEV ;
  TMP3 = 3.45E-12*exp(270./temperature);
  TMP4 = (530./temperature)+(4.8E-6)*PRES_TIME_LEV-1.73;
  rate_constant = TMP3*TMP4/100;
return

%//////////////////////////  RACM_reaction57 ///////////////////////////
function [rate_constant] =  RACM_reaction57(temperature, CM)
%//table 2f from Goloffi electronic supplement - for reaction 57
%//typo in the electornic supplement table 2f, listed as reaction 56
%//  CM = get_M_CONC();
  TMP0 = 2.4E-14*exp(460/temperature);
  TMP2 = 2.7E-17*exp(2199/temperature);
  TMP3 = 6.5E-34*exp(1335/temperature)*CM;
  rate_constant = TMP0 + TMP3/(1+TMP3/TMP2);
return

#ENDINLINE









